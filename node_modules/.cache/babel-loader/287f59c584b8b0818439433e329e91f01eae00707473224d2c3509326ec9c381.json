{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-2023\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import logo from './logo.svg';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import Textform from './components/Textform';\n\n// import About from './components/About';\n// import { useState } from 'react';\n// import Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n// // let name  = \"<b>diwakar</b>\";// not allowed it will just print it same with the tags included\n// function App() {\n\n//   const [mode, setMode] = useState('light'); // dark mode enable or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type\n//     })\n\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 1500);\n\n//   }\n\n//   const toggleMode = () => {\n//     if (mode === 'light') {\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has enabled\", \"success\");\n//       // document.title=\"textutils-Dark Mode\";/\n\n//     }\n//     else {\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"light mode has enabled\", \"danger\");\n//     }\n//   }\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar title=\"Gaming_Hub\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//         <Switch>\n//           <Route path=\"/about\">\n//             <About />\n//           </Route>\n//           <Route path=\"/\">\n//             <Textform heading=\"Analyze your Text\" mode={mode} showAlert={showAlert} />\n//           </Route>\n//         </Switch>\n//       </div> \n\n//     </Router>\n\n//     </>\n//   );\n// }\n\n// export default App;\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has enabled\", \"danger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Gaming_Hub\",\n        aboutText: \"About Us\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Textform, {\n              heading: \"Analyze your Text\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","About","useState","Alert","BrowserRouter","Router","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","Routes","path","element","heading","_c","$RefreshReg$"],"sources":["D:/React-2023/my-app/src/App.js"],"sourcesContent":["// // import logo from './logo.svg';\n// import './App.css';\n// import Navbar from './components/Navbar';\n// import Textform from './components/Textform';\n\n\n// import About from './components/About';\n// import { useState } from 'react';\n// import Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\n\n// // let name  = \"<b>diwakar</b>\";// not allowed it will just print it same with the tags included\n// function App() {\n\n//   const [mode, setMode] = useState('light'); // dark mode enable or not\n//   const [alert, setAlert] = useState(null);\n\n//   const showAlert = (message, type) => {\n//     setAlert({\n//       msg: message,\n//       type: type\n//     })\n\n//     setTimeout(() => {\n//       setAlert(null);\n//     }, 1500);\n\n\n\n//   }\n\n\n//   const toggleMode = () => {\n//     if (mode === 'light') {\n//       setMode('dark');\n//       document.body.style.backgroundColor = '#042743';\n//       showAlert(\"Dark mode has enabled\", \"success\");\n//       // document.title=\"textutils-Dark Mode\";/\n\n//     }\n//     else {\n//       setMode('light');\n//       document.body.style.backgroundColor = 'white';\n//       showAlert(\"light mode has enabled\", \"danger\");\n//     }\n//   }\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar title=\"Gaming_Hub\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//         <Switch>\n//           <Route path=\"/about\">\n//             <About />\n//           </Route>\n//           <Route path=\"/\">\n//             <Textform heading=\"Analyze your Text\" mode={mode} showAlert={showAlert} />\n//           </Route>\n//         </Switch>\n//       </div> \n\n//     </Router>\n\n//     </>\n//   );\n// }\n\n\n// export default App;\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has enabled\", \"danger\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Gaming_Hub\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route path=\"/\" element={<Textform heading=\"Analyze your Text\" mode={mode} showAlert={showAlert} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}