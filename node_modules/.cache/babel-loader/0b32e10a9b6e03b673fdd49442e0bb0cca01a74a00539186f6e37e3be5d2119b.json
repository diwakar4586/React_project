{"ast":null,"code":"import _slicedToArray from\"D:/React-2023/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function About(){// let myStyle={\n//   color:'white',\n//   backgroundColor:'black'\n// }\nvar _useState=useState({color:'black',backgroundColor:'white'}),_useState2=_slicedToArray(_useState,2),myStyle=_useState2[0],setMystyle=_useState2[1];var _useState3=useState(\"Enter Dark mode\"),_useState4=_slicedToArray(_useState3,2),btnText=_useState4[0],setBtnText=_useState4[1];var toggleStyle=function toggleStyle(){if(myStyle.color==='white'){setMystyle({color:'black',backgroundColor:'white'});setBtnText(\"Enter Dark Mode\");}else if(myStyle.color==='black'){setMystyle({color:'white',backgroundColor:'black',border:'1px solid white'});setBtnText(\"Enter Light Mode\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:myStyle,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"About Us\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion\",id:\"accordionExample\",style:myStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",style:myStyle,children:\"Accordion Item #1\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseOne\",className:\"accordion-collapse collapse \",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\",style:myStyle,children:\"Accordion Item #2\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseTwo\",className:\"accordion-collapse collapse \",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseThree\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseThree\",style:myStyle,children:\"Accordion Item #3\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseThree\",className:\"accordion-collapse collapse\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the third item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"conatiner\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary  my-2\",onClick:toggleStyle,children:btnText})})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","About","_useState","color","backgroundColor","_useState2","_slicedToArray","myStyle","setMystyle","_useState3","_useState4","btnText","setBtnText","toggleStyle","border","className","style","children","id","type","onClick"],"sources":["D:/React-2023/my-app/src/components/About.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n  // let myStyle={\r\n  //   color:'white',\r\n  //   backgroundColor:'black'\r\n  // }\r\n  const [myStyle,setMystyle] = useState({\r\n    color:'black',\r\n    backgroundColor:'white'\r\n  })\r\n\r\n  const [btnText,setBtnText] = useState(\"Enter Dark mode\");\r\n\r\n  const toggleStyle = () =>{\r\n    if(myStyle.color ==='white'){\r\n      setMystyle({\r\n        color:'black',\r\n        backgroundColor:'white' \r\n      })\r\n      setBtnText(\"Enter Dark Mode\");\r\n      \r\n    }\r\n    else if(myStyle.color === 'black'){\r\n      setMystyle({\r\n        color:'white',\r\n        backgroundColor:'black',\r\n        border:'1px solid white'\r\n      })\r\n      setBtnText(\"Enter Light Mode\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container' style={myStyle}>\r\n      <h1 className='my-3'>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse \" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse \" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"conatiner\">\r\n      <button className=\"btn btn-secondary  my-2\" onClick={toggleStyle}>{btnText}</button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}