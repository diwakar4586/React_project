{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-2023\\\\my-app\\\\src\\\\components\\\\Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n  const handleClick = () => {\n    console.log(\"btn is click to convert uppercase\");\n    // setText(\"you have clicked and upded the state text\");\n    let newText = text;\n    setText(newText.toUpperCase());\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n  const clearAll = () => {\n    setText('');\n    props.showAlert(\"Text Cleard\", \"success\");\n  };\n  const handleCopy = () => {\n    var x = document.getElementById(\"myBox\");\n    props.showAlert(\"Text copied\", \"success\");\n    // console.log(x);\n\n    x.select();\n\n    // document.execCommand('copy'); // works only when the text is selected and this is old\n    navigator.clipboard.writeText(x.value); // this method doesnot need to select the text\n\n    x.blur();\n    props.showAlert(\"Text copied \", \"success\");\n  };\n  const handleSpaces = () => {\n    const txtArea = document.getElementById(\"myBox\");\n    setText(txtArea.value.replace(/\\s+/g, ' '));\n  };\n  const handleLoClick = () => {\n    setText(text.toLowerCase());\n  };\n  const handleOnchange = event => {\n    // console.log(\"onChange\");\n    // console.log(event);\n    setText(event.target.value);\n  };\n  // const [text, setText] = useState('Enter the text');\n  const [text, setText] = useState('');\n  // text = \"new Text\"; // wrong-way\n  //   setText(\"Updated text is here\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnchange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClick,\n        children: \"UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mx-2\",\n        onClick: handleLoClick,\n        children: \"LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-2\",\n        onClick: clearAll,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-2\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mx-2 my-2\",\n        onClick: handleSpaces,\n        children: \"Remove Extra spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.trim() === \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          children: \"0 words, 0 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this) : text.trim().split(/\\s+/) // Split by one or more whitespace characters\n        .filter(word => word !== \"\") // Filter out empty strings\n        .length + \" words, \" + text.length + \" characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something to preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Textform, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = Textform;\nTextform.propTypes = {\n  heading: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Textform","props","_s","handleClick","console","log","newText","text","setText","toUpperCase","showAlert","clearAll","handleCopy","x","document","getElementById","select","navigator","clipboard","writeText","value","blur","handleSpaces","txtArea","replace","handleLoClick","toLowerCase","handleOnchange","event","target","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","id","rows","onClick","trim","split","filter","word","length","_c","propTypes","string","$RefreshReg$"],"sources":["D:/React-2023/my-app/src/components/Textform.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n  const handleClick = () => {\r\n    console.log(\"btn is click to convert uppercase\");\r\n    // setText(\"you have clicked and upded the state text\");\r\n    let newText = text;\r\n    setText(newText.toUpperCase());\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n\r\n\r\n  }\r\n  const clearAll = () => {\r\n    setText('');\r\n    props.showAlert(\"Text Cleard\", \"success\");\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    var x = document.getElementById(\"myBox\");\r\n    props.showAlert(\"Text copied\",\"success\");\r\n    // console.log(x);\r\n\r\n    x.select();\r\n\r\n    // document.execCommand('copy'); // works only when the text is selected and this is old\r\n    navigator.clipboard.writeText(x.value);// this method doesnot need to select the text\r\n\r\n\r\n    x.blur();\r\n\r\n    props.showAlert(\"Text copied \", \"success\");\r\n  }\r\n\r\n  const handleSpaces = () => {\r\n    const txtArea = document.getElementById(\"myBox\");\r\n    setText(txtArea.value.replace(/\\s+/g, ' '));\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    setText(text.toLowerCase());\r\n\r\n\r\n  }\r\n  const handleOnchange = (event) => {\r\n    // console.log(\"onChange\");\r\n    // console.log(event);\r\n    setText(event.target.value);\r\n  }\r\n  // const [text, setText] = useState('Enter the text');\r\n  const [text, setText] = useState('');\r\n  // text = \"new Text\"; // wrong-way\r\n  //   setText(\"Updated text is here\");\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\r\n        <div className=\"mb-3\">\r\n          <h1>{props.heading}</h1>\r\n          {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick}>UpperCase</button>\r\n        <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>LowerCase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={clearAll}>Clear</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-danger mx-2 my-2\" onClick={handleSpaces}>Remove Extra spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h2 style={{ color: props.mode === 'dark' ? 'white' : 'black' }} >Your Text Summary</h2>\r\n        {/* <p>{text.split(\" \").length} words, {text.length} characters </p>  */}\r\n        {/* <p>\r\n          {text.trim() === \"\" ? 0 : text.trim().split(\" \").length} words, {text.length} characters\r\n        </p> */}\r\n        <p>\r\n          {text.trim() === \"\"\r\n            ? <span style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>0 words, 0 characters</span>\r\n            : text\r\n              .trim()\r\n              .split(/\\s+/) // Split by one or more whitespace characters\r\n              .filter((word) => word !== \"\") // Filter out empty strings\r\n              .length + \" words, \" + text.length + \" characters\"}\r\n        </p>\r\n\r\n\r\n\r\n\r\n\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview\"}</p>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nTextform.propTypes = {\r\n  heading: PropTypes.string,\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}