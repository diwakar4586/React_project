{"ast":null,"code":"import _slicedToArray from\"D:/React-2023/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Textform(props){var handleClick=function handleClick(){console.log(\"btn is click to convert uppercase\");// setText(\"you have clicked and upded the state text\");\nvar newText=text;setText(newText.toUpperCase());props.showAlert(\"Converted to uppercase\",\"success\");};var clearAll=function clearAll(){setText('');props.showAlert(\"Text Cleard\",\"success\");};var handleCopy=function handleCopy(){var x=document.getElementById(\"myBox\");props.showAlert(\"Text copied\",\"success\");// console.log(x);\nx.select();// document.execCommand('copy'); // works only when the text is selected and this is old\nnavigator.clipboard.writeText(x.value);// this method doesnot need to select the text\nx.blur();props.showAlert(\"Text copied \",\"success\");};var handleSpaces=function handleSpaces(){var txtArea=document.getElementById(\"myBox\");setText(txtArea.value.replace(/\\s+/g,' '));};var handleLoClick=function handleLoClick(){setText(text.toLowerCase());};var handleOnchange=function handleOnchange(event){// console.log(\"onChange\");\n// console.log(event);\nsetText(event.target.value);};// const [text, setText] = useState('Enter the text');\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];// text = \"new Text\"; // wrong-way\n//   setText(\"Updated text is here\");\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:{color:props.mode==='dark'?'white':'black'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnchange,style:{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'},id:\"myBox\",rows:\"8\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleClick,children:\"UpperCase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mx-2\",onClick:handleLoClick,children:\"LowerCase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mx-2\",onClick:clearAll,children:\"Clear\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mx-2\",onClick:handleCopy,children:\"Copy Text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mx-2 my-2\",onClick:handleSpaces,children:\"Remove Extra spaces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",style:{color:props.mode==='dark'?'white':'black'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:props.mode==='dark'?'white':'black'},children:\"Your Text Summary\"}),/*#__PURE__*/_jsx(\"p\",{children:text.trim()===\"\"?/*#__PURE__*/_jsx(\"span\",{style:{color:props.mode==='dark'?'white':'black'},children:\"0 words, 0 characters\"}):text.trim().split(/\\s+/)// Split by one or more whitespace characters\n.filter(function(word){return word!==\"\";})// Filter out empty strings\n.length+\" words, \"+text.length+\" characters\"}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" Minutes to read\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter something to preview\"})]})]});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Textform","props","handleClick","console","log","newText","text","setText","toUpperCase","showAlert","clearAll","handleCopy","x","document","getElementById","select","navigator","clipboard","writeText","value","blur","handleSpaces","txtArea","replace","handleLoClick","toLowerCase","handleOnchange","event","target","_useState","_useState2","_slicedToArray","children","className","style","color","mode","heading","onChange","backgroundColor","id","rows","onClick","trim","split","filter","word","length"],"sources":["D:/React-2023/my-app/src/components/Textform.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n  const handleClick = () => {\r\n    console.log(\"btn is click to convert uppercase\");\r\n    // setText(\"you have clicked and upded the state text\");\r\n    let newText = text;\r\n    setText(newText.toUpperCase());\r\n    props.showAlert(\"Converted to uppercase\", \"success\");\r\n\r\n\r\n  }\r\n  const clearAll = () => {\r\n    setText('');\r\n    props.showAlert(\"Text Cleard\", \"success\");\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    var x = document.getElementById(\"myBox\");\r\n    props.showAlert(\"Text copied\",\"success\");\r\n    // console.log(x);\r\n\r\n    x.select();\r\n\r\n    // document.execCommand('copy'); // works only when the text is selected and this is old\r\n    navigator.clipboard.writeText(x.value);// this method doesnot need to select the text\r\n\r\n\r\n    x.blur();\r\n\r\n    props.showAlert(\"Text copied \", \"success\");\r\n  }\r\n\r\n  const handleSpaces = () => {\r\n    const txtArea = document.getElementById(\"myBox\");\r\n    setText(txtArea.value.replace(/\\s+/g, ' '));\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    setText(text.toLowerCase());\r\n\r\n\r\n  }\r\n  const handleOnchange = (event) => {\r\n    // console.log(\"onChange\");\r\n    // console.log(event);\r\n    setText(event.target.value);\r\n  }\r\n  // const [text, setText] = useState('Enter the text');\r\n  const [text, setText] = useState('');\r\n  // text = \"new Text\"; // wrong-way\r\n  //   setText(\"Updated text is here\");\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\r\n        <div className=\"mb-3\">\r\n          <h1>{props.heading}</h1>\r\n          {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnchange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick}>UpperCase</button>\r\n        <button className=\"btn btn-success mx-2\" onClick={handleLoClick}>LowerCase</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={clearAll}>Clear</button>\r\n        <button className=\"btn btn-danger mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-danger mx-2 my-2\" onClick={handleSpaces}>Remove Extra spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n        <h2 style={{ color: props.mode === 'dark' ? 'white' : 'black' }} >Your Text Summary</h2>\r\n        {/* <p>{text.split(\" \").length} words, {text.length} characters </p>  */}\r\n        {/* <p>\r\n          {text.trim() === \"\" ? 0 : text.trim().split(\" \").length} words, {text.length} characters\r\n        </p> */}\r\n        <p>\r\n          {text.trim() === \"\"\r\n            ? <span style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>0 words, 0 characters</span>\r\n            : text\r\n              .trim()\r\n              .split(/\\s+/) // Split by one or more whitespace characters\r\n              .filter((word) => word !== \"\") // Filter out empty strings\r\n              .length + \" words, \" + text.length + \" characters\"}\r\n        </p>\r\n\r\n\r\n\r\n\r\n\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something to preview\"}</p>\r\n\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nTextform.propTypes = {\r\n  heading: PropTypes.string,\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}