{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-2023\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// let name  = \"<b>diwakar</b>\";// not allowed it will just print it same with the tags included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // dark mode enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has enabled\", \"success\");\n      // document.title=\"textutils-Dark Mode\";/\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has enabled\", \"danger\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Gaming_Hub\",\n      aboutText: \"About Us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Textform, {\n            heading: \"Analyze your Text\",\n            mode: mode,\n            showAlert: showAlert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","About","useState","Alert","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","path","heading","_c","$RefreshReg$"],"sources":["D:/React-2023/my-app/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n\n\nimport About from './components/About';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\n\n\n// let name  = \"<b>diwakar</b>\";// not allowed it will just print it same with the tags included\nfunction App() {\n\n  const [mode, setMode] = useState('light'); // dark mode enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n\n\n  }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has enabled\", \"success\");\n      // document.title=\"textutils-Dark Mode\";/\n\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode has enabled\", \"danger\");\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"Gaming_Hub\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Textform heading=\"Analyze your Text\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </div>\n\n\n    </>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}